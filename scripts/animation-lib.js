// Generated by Haxe 3.4.0
(function () { "use strict";
var HxOverrides = function() { };
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
var Reflect = function() { };
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var com_blufedora_Animation = function(target,options) {
	this.target = target;
	this.props = options;
	this.steps = [];
	this._index = 0;
	this._deltaTime = 0;
};
com_blufedora_Animation.prototype = {
	to: function(step) {
		step.init(this.target);
		this.steps.push(step);
		return this;
	}
	,update: function(ms) {
		this._deltaTime += ms;
		if(this.steps.length > 0 && this._index >= 0) {
			var step = this.steps[this._index];
			if(step != null) {
				if(this._deltaTime / step.time > 1.0) {
					if(this.incIndex()) {
						step = this.steps[this._index];
					} else {
						step = null;
					}
				}
			} else {
				this.setIndex(-1);
			}
			if(step != null) {
				var timeTot = step.time;
				var _g = 0;
				var _g1 = Reflect.fields(step.properties);
				while(_g < _g1.length) {
					var field = _g1[_g];
					++_g;
					var startVal = Reflect.field(step.startProps,field);
					var value = step.easing(this._deltaTime,startVal,Reflect.field(step.properties,field) - startVal,timeTot);
					var o = this.target.style;
					var value1 = value + "px";
					var tmp;
					var tmp1;
					if(o.__properties__) {
						tmp = o.__properties__["set_" + field];
						tmp1 = tmp;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						o[tmp](value1);
					} else {
						o[field] = value1;
					}
				}
			}
		}
	}
	,incIndex: function() {
		return this.setIndex(this._index + 1);
	}
	,setIndex: function(value) {
		this._index = value;
		this._deltaTime = 0.0;
		if(this._index >= this.steps.length) {
			if(this.props.loop) {
				return this.setIndex(0);
			} else {
				com_blufedora_Tweener.remove(this);
				return false;
			}
		} else if(this._index < 0) {
			com_blufedora_Tweener.remove(this);
			return false;
		}
		this.steps[this._index].init(this.target);
		return true;
	}
};
var com_blufedora_AnimationStep = function(properties,time,easeFunc) {
	this.properties = properties;
	this.startProps = { };
	this.easing = easeFunc;
	this.time = time;
};
com_blufedora_AnimationStep.prototype = {
	parse1: function(target,prop) {
		var val = parseInt(window.getComputedStyle(target).getPropertyValue(prop),10);
		if(val == NaN) {
			return 0;
		} else {
			return val;
		}
	}
	,parse2: function(target,prop) {
		var val = parseFloat(window.getComputedStyle(target).getPropertyValue(prop));
		if(val == NaN) {
			return 0;
		} else {
			return val;
		}
	}
	,init: function(target) {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			var s = window.getComputedStyle(target).getPropertyValue(field);
			this.startProps[field] = this.parse2(target,field);
		}
	}
};
var com_blufedora_Easing = function() { };
com_blufedora_Easing.easeLinear = function(t,b,c,d) {
	return c * t / d + b;
};
com_blufedora_Easing.easeInSine = function(t,b,c,d) {
	return -c * Math.cos(t / d * com_blufedora_Easing.PI_D2) + c + b;
};
com_blufedora_Easing.easeOutSine = function(t,b,c,d) {
	return c * Math.sin(t / d * com_blufedora_Easing.PI_D2) + b;
};
com_blufedora_Easing.easeInOutSine = function(t,b,c,d) {
	return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
};
com_blufedora_Easing.easeInQuint = function(t,b,c,d) {
	return c * (t /= d) * t * t * t * t + b;
};
com_blufedora_Easing.easeOutQuint = function(t,b,c,d) {
	t = t / d - 1;
	return c * (t * t * t * t * t + 1) + b;
};
com_blufedora_Easing.easeInOutQuint = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t * t * t * t + b;
	}
	return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
};
com_blufedora_Easing.easeInQuart = function(t,b,c,d) {
	return c * (t /= d) * t * t * t + b;
};
com_blufedora_Easing.easeOutQuart = function(t,b,c,d) {
	t = t / d - 1;
	return -c * (t * t * t * t - 1) + b;
};
com_blufedora_Easing.easeInOutQuart = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t * t * t + b;
	}
	return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
};
com_blufedora_Easing.easeInQuad = function(t,b,c,d) {
	return c * (t /= d) * t + b;
};
com_blufedora_Easing.easeOutQuad = function(t,b,c,d) {
	return -c * (t /= d) * (t - 2) + b;
};
com_blufedora_Easing.easeInOutQuad = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t + b;
	}
	return -c / 2 * (--t * (t - 2) - 1) + b;
};
com_blufedora_Easing.easeInExpo = function(t,b,c,d) {
	if(t == 0) {
		return b;
	} else {
		return c * Math.pow(2,10 * (t / d - 1)) + b;
	}
};
com_blufedora_Easing.easeOutExpo = function(t,b,c,d) {
	if(t == d) {
		return b + c;
	} else {
		return c * (-Math.pow(2,-10 * t / d) + 1) + b;
	}
};
com_blufedora_Easing.easeInOutExpo = function(t,b,c,d) {
	if(t == 0) {
		return b;
	}
	if(t == d) {
		return b + c;
	}
	if((t /= d / 2) < 1) {
		return c / 2 * Math.pow(2,10 * (t - 1)) + b;
	}
	return c / 2 * (-Math.pow(2,-10 * --t) + 2) + b;
};
com_blufedora_Easing.easeInElastic = function(t,b,c,d,a,p) {
	var s;
	if(t == 0) {
		return b;
	}
	if((t /= d) == 1) {
		return b + c;
	}
	if(p == null) {
		p = d * .3;
	}
	if(a == null || a < Math.abs(c)) {
		a = c;
		s = p / 4;
	} else {
		s = p / com_blufedora_Easing.PI_M2 * Math.asin(c / a);
	}
	return -(a * Math.pow(2,10 * --t) * Math.sin((t * d - s) * com_blufedora_Easing.PI_M2 / p)) + b;
};
com_blufedora_Easing.easeOutElastic = function(t,b,c,d,a,p) {
	var s;
	if(t == 0) {
		return b;
	}
	if((t /= d) == 1) {
		return b + c;
	}
	if(p == null) {
		p = d * .3;
	}
	if(a == null || a < Math.abs(c)) {
		a = c;
		s = p / 4;
	} else {
		s = p / com_blufedora_Easing.PI_M2 * Math.asin(c / a);
	}
	return a * Math.pow(2,-10 * t) * Math.sin((t * d - s) * com_blufedora_Easing.PI_M2 / p) + c + b;
};
com_blufedora_Easing.easeInOutElastic = function(t,b,c,d,a,p) {
	var s;
	if(t == 0) {
		return b;
	}
	if((t /= d / 2) == 2) {
		return b + c;
	}
	if(p == null) {
		p = d * 0.44999999999999996;
	}
	if(a == null || a < Math.abs(c)) {
		a = c;
		s = p / 4;
	} else {
		s = p / com_blufedora_Easing.PI_M2 * Math.asin(c / a);
	}
	if(t < 1) {
		return -.5 * (a * Math.pow(2,10 * --t) * Math.sin((t * d - s) * com_blufedora_Easing.PI_M2 / p)) + b;
	}
	return a * Math.pow(2,-10 * --t) * Math.sin((t * d - s) * com_blufedora_Easing.PI_M2 / p) * .5 + c + b;
};
com_blufedora_Easing.easeInCircular = function(t,b,c,d) {
	return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
};
com_blufedora_Easing.easeOutCircular = function(t,b,c,d) {
	t = t / d - 1;
	return c * Math.sqrt(1 - t * t) + b;
};
com_blufedora_Easing.easeInOutCircular = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
	}
	return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
};
com_blufedora_Easing.easeInBack = function(t,b,c,d,s) {
	if(s == null) {
		s = 1.70158;
	}
	return c * (t /= d) * t * ((s + 1) * t - s) + b;
};
com_blufedora_Easing.easeOutBack = function(t,b,c,d,s) {
	if(s == null) {
		s = 1.70158;
	}
	t = t / d - 1;
	return c * (t * t * ((s + 1) * t + s) + 1) + b;
};
com_blufedora_Easing.easeInOutBack = function(t,b,c,d,s) {
	if(s == null) {
		s = 1.70158;
	}
	if((t /= d / 2) < 1) {
		return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;
	}
	return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
};
com_blufedora_Easing.easeInBounce = function(t,b,c,d) {
	return c - com_blufedora_Easing.easeOutBounce(d - t,0,c,d) + b;
};
com_blufedora_Easing.easeOutBounce = function(t,b,c,d) {
	if((t /= d) < 0.36363636363636365) {
		return c * (7.5625 * t * t) + b;
	} else if(t < 0.72727272727272729) {
		return c * (7.5625 * (t -= 0.54545454545454541) * t + .75) + b;
	} else if(t < 0.90909090909090906) {
		return c * (7.5625 * (t -= 0.81818181818181823) * t + .9375) + b;
	} else {
		return c * (7.5625 * (t -= 0.95454545454545459) * t + .984375) + b;
	}
};
com_blufedora_Easing.easeInOutBounce = function(t,b,c,d) {
	if(t < d / 2) {
		return com_blufedora_Easing.easeInBounce(t * 2,0,c,d) * .5 + b;
	} else {
		return com_blufedora_Easing.easeOutBounce(t * 2 - d,0,c,d) * .5 + c * .5 + b;
	}
};
com_blufedora_Easing.easeInCubic = function(t,b,c,d) {
	return c * (t /= d) * t * t + b;
};
com_blufedora_Easing.easeOutCubic = function(t,b,c,d) {
	t = t / d - 1;
	return c * (t * t * t + 1) + b;
};
com_blufedora_Easing.easeInOutCubic = function(t,b,c,d) {
	if((t /= d / 2) < 1) {
		return c / 2 * t * t * t + b;
	}
	return c / 2 * ((t -= 2) * t * t + 2) + b;
};
var com_blufedora_Main = function() { };
com_blufedora_Main.main = function() {
	window.onload = function() {
		com_blufedora_Tweener.init(window);
		window.addEventListener("devicemotion",function(evt) {
			var z = evt.rotationRate.alpha;
			var x = evt.rotationRate.beta;
			var y = evt.rotationRate.gamma;
			console.log(evt);
			var article = window.document.getElementsByTagName("article").item(0);
			var element = window.document.createElement("div");
			element.innerHTML += "<p>X = " + x + "</p>";
			element.innerHTML += "<p>Y = " + y + "</p>";
			element.innerHTML += "<p>Z = " + z + "</p>";
			article.appendChild(element);
		},true);
		window.onmousemove = function(evt1) {
		};
		com_blufedora_Tweener.add(window.document.getElementById("shareef"),{ loop : true}).to(new com_blufedora_AnimationStep({ top : 50},2000,com_blufedora_Easing.easeInOutSine)).to(new com_blufedora_AnimationStep({ top : 100},1500,com_blufedora_Easing.easeInOutSine));
		com_blufedora_Tweener.add(window.document.getElementById("p2"),{ loop : true}).to(new com_blufedora_AnimationStep({ top : 50},3000,com_blufedora_Easing.easeInOutSine)).to(new com_blufedora_AnimationStep({ top : 0},2000,com_blufedora_Easing.easeInOutSine));
		com_blufedora_Tweener.add(window.document.getElementById("p3"),{ loop : true}).to(new com_blufedora_AnimationStep({ top : 50},4000,com_blufedora_Easing.easeInOutSine)).to(new com_blufedora_AnimationStep({ top : 0},2500,com_blufedora_Easing.easeInOutSine));
		com_blufedora_Tweener.add(window.document.getElementById("p4"),{ loop : true}).to(new com_blufedora_AnimationStep({ top : 50},5000,com_blufedora_Easing.easeInOutSine)).to(new com_blufedora_AnimationStep({ top : 0},3000,com_blufedora_Easing.easeInOutSine));
	};
};
var com_blufedora_Tweener = function() { };
com_blufedora_Tweener.init = function(window) {
	com_blufedora_Tweener.anims = [];
	com_blufedora_Tweener.toRemove = [];
	com_blufedora_Tweener.start = null;
	com_blufedora_Tweener.handle = 0;
	
			(function() 
			{
				var vendors = ['ms', 'moz', 'webkit', 'o'];
				var lastTime = 0;
				
				for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) 
				{
					window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
					window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] 
											   || window[vendors[x] + 'CancelRequestAnimationFrame'];
				}
				
				if (!window.requestAnimationFrame) 
				{
					window.requestAnimationFrame = function(callback, element) 
					{
						var currTime = new Date().getTime();
						var timeToCall = Math.max(0, 16 - (currTime - lastTime));
						
						var id = window.setTimeout(
							function() { 
								callback(currTime + timeToCall); 
							}, 
							timeToCall);
							
						lastTime = currTime + timeToCall;
						return id;
					};
				}
				
				if (!window.cancelAnimationFrame) 
				{
					window.cancelAnimationFrame = function(id) 
					{
						clearTimeout(id);
					};
				}
			}());
		;
	com_blufedora_Tweener.updateTweens(0);
	console.log("BluFedora's Tweener Library has Initialized");
};
com_blufedora_Tweener.add = function(target,params) {
	var anim = new com_blufedora_Animation(target,params);
	com_blufedora_Tweener.anims.push(anim);
	return anim;
};
com_blufedora_Tweener.remove = function(anim) {
	com_blufedora_Tweener.toRemove.push(anim);
};
com_blufedora_Tweener.updateTweens = function(timestamp) {
	if(com_blufedora_Tweener.start == null) {
		com_blufedora_Tweener.start = timestamp;
	}
	var progress = timestamp - com_blufedora_Tweener.start;
	var _g = 0;
	var _g1 = com_blufedora_Tweener.toRemove;
	while(_g < _g1.length) {
		var anim = _g1[_g];
		++_g;
		HxOverrides.remove(com_blufedora_Tweener.anims,anim);
	}
	com_blufedora_Tweener.toRemove.splice(0,com_blufedora_Tweener.toRemove.length);
	var _g2 = 0;
	var _g11 = com_blufedora_Tweener.anims;
	while(_g2 < _g11.length) {
		var anim1 = _g11[_g2];
		++_g2;
		anim1.update(progress);
	}
	com_blufedora_Tweener.start = timestamp;
	com_blufedora_Tweener.handle = window.requestAnimationFrame(com_blufedora_Tweener.updateTweens);
};
com_blufedora_Tweener.destroy = function() {
	window.cancelAnimationFrame(com_blufedora_Tweener.handle);
};
com_blufedora_Easing.PI_M2 = Math.PI * 2.0;
com_blufedora_Easing.PI_D2 = Math.PI * 0.5;
com_blufedora_Easing.linear = com_blufedora_Easing.easeLinear;
com_blufedora_Easing.none = com_blufedora_Easing.easeLinear;
com_blufedora_Main.main();
})();
