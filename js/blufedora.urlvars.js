// Generated by Haxe 4.3.3
(function ($hx_exports, $global) { "use strict";
$hx_exports["blufedora"] = $hx_exports["blufedora"] || {};
var blufedora_UrlVars = $hx_exports["blufedora"]["urlvars"] = function() { };
blufedora_UrlVars.main = function() {
	blufedora_UrlVars.s_Variables = new haxe_ds_StringMap();
	var $window = window;
	var url = $window.location.href;
	var parse_start = url.indexOf("?") + 1;
	if(parse_start != 0) {
		var parse_end = url.indexOf("#",parse_start);
		if(parse_end == -1) {
			parse_end = url.length;
		}
		if(parse_start != parse_end) {
			var var_parts = url.substring(parse_start,parse_end).split("&");
			var _g = 0;
			while(_g < var_parts.length) {
				var part = var_parts[_g++];
				var key_value = decodeURIComponent(part.split("+").join(" ")).split("=");
				if(key_value.length > 0) {
					if(key_value.length > 1) {
						blufedora_UrlVars.s_Variables.h[key_value[0]] = key_value[1];
					} else {
						blufedora_UrlVars.s_Variables.h[key_value[0]] = "";
					}
				}
			}
		}
	}
};
blufedora_UrlVars.get = function(key,default_value) {
	var value = blufedora_UrlVars.s_Variables.h[key];
	if(value == null) {
		value = default_value;
	}
	return value;
};
blufedora_UrlVars.has = function(key) {
	return Object.prototype.hasOwnProperty.call(blufedora_UrlVars.s_Variables.h,key);
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
blufedora_UrlVars.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
